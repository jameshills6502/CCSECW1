@page "/register"

@using Data
@using BlazorServer.Models
@using Microsoft.Extensions.Configuration
@inject IDataAccess _data
@inject IConfiguration _config

<h3>Register Account</h3>


<EditForm Model="@accounts" OnValidSubmit="@create_account">
    <DataAnnotationsValidator />
    <ValidationSummary />
     <div class="form-group">
         <label>Email:</label>
    <InputText id="email" @bind-Value="accounts.Email"/>
    </div>
    <div class="form-group">
        <label>Password:</label>
    <InputText type="password" id="password" @bind-Value="accounts.Password" />
    </div>
    <div class="form-group">
        <label>Confirm Password:</label>
    <InputText type="password" id="confirm_password" @bind-Value="accounts.PasswordConfirmation" />
    </div>
    <button type="submit" class="btn btn-primary">Create Account</button>
</EditForm>
<span style="font-weight:bold;font-size:28px;color:#c00">@Message</span>
@if (check_user == null){
    <p><em>Loading...</em></p>
}
else
{@foreach (var p in check_user)
    
    {
        <h1> @p.User_Email, @p.User_Password</h1>
    }
}
@code {
    private string Message { get; set; } = "";
    private List<UserModel> users;
    private List<PersonModel> check_user;
    private AccountModel accounts = new();
    private async Task create_account()
    {
        UserModel newaccount = new UserModel
            {
                Email = accounts.Email,
                Password = accounts.Password
            };
        string sql_check = "select * from User_Accounts where User_Email = @User_Email;";

        check_user = await _data.LoadData<PersonModel, dynamic>(sql_check, new { User_Email = @accounts.Email}, _config.GetConnectionString("default"));
        if (check_user != null)
    {
            string sql = "insert into User_Accounts(User_Email, User_Password) VALUES (@User_Email, @User_Password);";
            await _data.SaveData(sql, new { User_Email = @accounts.Email, User_Password = @accounts.Password}, _config.GetConnectionString("default"));
            Message = "Account Created!";

        }
        else if(check_user == null)
        {
            Message = "Account already exists";
            accounts.Password = string.Empty;
            accounts.Email = string.Empty;
            accounts.PasswordConfirmation = string.Empty;
        }

        
        // might need to add in parameters here
    }
}